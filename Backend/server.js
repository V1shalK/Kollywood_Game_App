// server.js
const express = require("express");
const bcrypt = require("bcrypt");
const jwt = require("jsonwebtoken");
const cors = require("cors");
const pool = require("./db");
require("dotenv").config();

const app = express();
app.use(cors());
app.use(express.json()); // parse JSON bodies

// -----------------------
// Signup Route
// -----------------------
app.post("/signup", async (req, res) => {
Â  const { username, email, password } = req.body;
Â  try {
Â  Â  const hashedPassword = await bcrypt.hash(password, 10);

Â  Â  const result = await pool.query(
Â  Â  Â  "INSERT INTO users (username, email, password_hash) VALUES ($1, $2, $3) RETURNING id, username, email",
Â  Â  Â  [username, email, hashedPassword]
Â  Â  );

Â  Â  res.json({ message: "User registered successfully", user: result.rows[0] });
Â  } catch (err) {
Â  Â  console.error(err);
Â  Â  res.status(400).json({ error: "Username or email already exists" });
Â  }
});

// -----------------------
// Login Route
// -----------------------
app.post("/login", async (req, res) => {
Â  const { email, password } = req.body;
Â  try {
Â  Â  const result = await pool.query("SELECT * FROM users WHERE email = $1", [email]);
Â  Â  if (result.rows.length === 0) return res.status(400).json({ error: "Invalid email" });

Â  Â  const user = result.rows[0];
Â  Â  const validPassword = await bcrypt.compare(password, user.password_hash);
Â  Â  if (!validPassword) return res.status(400).json({ error: "Invalid password" });

Â  Â  const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET, { expiresIn: "1h" });
Â  Â  
Â  Â  res.json({ 
Â  Â  Â  Â  message: "Login successful", 
Â  Â  Â  Â  token,
Â  Â  Â  Â  user: {
Â  Â  Â  Â  Â  Â  id: user.id,
Â  Â  Â  Â  Â  Â  username: user.username
Â  Â  Â  Â  }
Â  Â  });

Â  } catch (err) {
Â  Â  console.error(err);
Â  Â  res.status(500).json({ error: "Server error" });
Â  }
});

// -----------------------
// Start server
// -----------------------
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`ðŸš€ Server running on http://localhost:${PORT}`));